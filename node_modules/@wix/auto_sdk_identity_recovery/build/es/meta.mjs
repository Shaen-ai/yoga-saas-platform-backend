// src/iam-recovery-v1-recovery-recovery.http.ts
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTBytesToSDKBytes } from "@wix/sdk-runtime/transformations/bytes";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixIamRecoveryV1RecoveryServiceUrl(opts) {
  const domainToMappings = {
    _: [
      {
        srcPath: "/_iam/recovery",
        destPath: ""
      },
      {
        srcPath: "/_api/iam/recovery",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/_api/iam/recovery",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/iam/recovery/v1/recover",
        destPath: "/v1/recover"
      },
      {
        srcPath: "/iam/recovery/v1/send-email",
        destPath: "/v1/send-email"
      },
      {
        srcPath: "/iam/recovery/v1/activation-email",
        destPath: "/v1/activation-email"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_identity_recovery";
function sendRecoveryEmail(payload) {
  function __sendRecoveryEmail({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.recovery.v1.recovery",
      method: "POST",
      methodFqn: "wix.iam.recovery.v1.RecoveryService.SendRecoveryEmail",
      packageName: PACKAGE_NAME,
      migrationOptions: {
        optInTransformResponse: true
      },
      url: resolveWixIamRecoveryV1RecoveryServiceUrl({
        protoPath: "/v1/send-email",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __sendRecoveryEmail;
}
function sendActivationEmail(payload) {
  function __sendActivationEmail({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.recovery.v1.recovery",
      method: "POST",
      methodFqn: "wix.iam.recovery.v1.RecoveryService.SendActivationEmail",
      packageName: PACKAGE_NAME,
      migrationOptions: {
        optInTransformResponse: true
      },
      url: resolveWixIamRecoveryV1RecoveryServiceUrl({
        protoPath: "/v1/activation-email",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __sendActivationEmail;
}
function recover(payload) {
  function __recover({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.recovery.v1.recovery",
      method: "POST",
      methodFqn: "wix.iam.recovery.v1.RecoveryService.Recover",
      packageName: PACKAGE_NAME,
      migrationOptions: {
        optInTransformResponse: true
      },
      url: resolveWixIamRecoveryV1RecoveryServiceUrl({
        protoPath: "/v1/recover",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.challenge"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" },
            { path: "additionalData.*.dateValue" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" },
            { path: "additionalData.*.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __recover;
}

// src/iam-recovery-v1-recovery-recovery.types.ts
var TenantType = /* @__PURE__ */ ((TenantType2) => {
  TenantType2["UNKNOWN_TENANT_TYPE"] = "UNKNOWN_TENANT_TYPE";
  TenantType2["ACCOUNT"] = "ACCOUNT";
  TenantType2["SITE"] = "SITE";
  return TenantType2;
})(TenantType || {});
var StateType = /* @__PURE__ */ ((StateType2) => {
  StateType2["UNKNOWN_STATE"] = "UNKNOWN_STATE";
  StateType2["SUCCESS"] = "SUCCESS";
  StateType2["REQUIRE_OWNER_APPROVAL"] = "REQUIRE_OWNER_APPROVAL";
  StateType2["REQUIRE_EMAIL_VERIFICATION"] = "REQUIRE_EMAIL_VERIFICATION";
  StateType2["STATUS_CHECK"] = "STATUS_CHECK";
  return StateType2;
})(StateType || {});
var PrivacyStatus = /* @__PURE__ */ ((PrivacyStatus2) => {
  PrivacyStatus2["UNDEFINED"] = "UNDEFINED";
  PrivacyStatus2["PUBLIC"] = "PUBLIC";
  PrivacyStatus2["PRIVATE"] = "PRIVATE";
  return PrivacyStatus2;
})(PrivacyStatus || {});
var EmailTag = /* @__PURE__ */ ((EmailTag2) => {
  EmailTag2["UNTAGGED"] = "UNTAGGED";
  EmailTag2["MAIN"] = "MAIN";
  EmailTag2["HOME"] = "HOME";
  EmailTag2["WORK"] = "WORK";
  return EmailTag2;
})(EmailTag || {});
var PhoneTag = /* @__PURE__ */ ((PhoneTag2) => {
  PhoneTag2["UNTAGGED"] = "UNTAGGED";
  PhoneTag2["MAIN"] = "MAIN";
  PhoneTag2["HOME"] = "HOME";
  PhoneTag2["MOBILE"] = "MOBILE";
  PhoneTag2["WORK"] = "WORK";
  PhoneTag2["FAX"] = "FAX";
  return PhoneTag2;
})(PhoneTag || {});
var AddressTag = /* @__PURE__ */ ((AddressTag2) => {
  AddressTag2["UNTAGGED"] = "UNTAGGED";
  AddressTag2["HOME"] = "HOME";
  AddressTag2["WORK"] = "WORK";
  AddressTag2["BILLING"] = "BILLING";
  AddressTag2["SHIPPING"] = "SHIPPING";
  return AddressTag2;
})(AddressTag || {});
var StatusName = /* @__PURE__ */ ((StatusName2) => {
  StatusName2["UNKNOWN_STATUS"] = "UNKNOWN_STATUS";
  StatusName2["PENDING"] = "PENDING";
  StatusName2["ACTIVE"] = "ACTIVE";
  StatusName2["DELETED"] = "DELETED";
  StatusName2["BLOCKED"] = "BLOCKED";
  StatusName2["OFFLINE"] = "OFFLINE";
  return StatusName2;
})(StatusName || {});
var Reason = /* @__PURE__ */ ((Reason2) => {
  Reason2["UNKNOWN_REASON"] = "UNKNOWN_REASON";
  Reason2["PENDING_ADMIN_APPROVAL_REQUIRED"] = "PENDING_ADMIN_APPROVAL_REQUIRED";
  Reason2["PENDING_EMAIL_VERIFICATION_REQUIRED"] = "PENDING_EMAIL_VERIFICATION_REQUIRED";
  return Reason2;
})(Reason || {});
var FactorType = /* @__PURE__ */ ((FactorType2) => {
  FactorType2["UNKNOWN_FACTOR_TYPE"] = "UNKNOWN_FACTOR_TYPE";
  FactorType2["PASSWORD"] = "PASSWORD";
  FactorType2["SMS"] = "SMS";
  FactorType2["CALL"] = "CALL";
  FactorType2["EMAIL"] = "EMAIL";
  FactorType2["TOTP"] = "TOTP";
  FactorType2["PUSH"] = "PUSH";
  FactorType2["WEBAUTHN"] = "WEBAUTHN";
  FactorType2["RECOVERY_CODE"] = "RECOVERY_CODE";
  return FactorType2;
})(FactorType || {});
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["INACTIVE"] = "INACTIVE";
  Status2["ACTIVE"] = "ACTIVE";
  Status2["REQUIRE_REENROLL"] = "REQUIRE_REENROLL";
  return Status2;
})(Status || {});
var FactorStatus = /* @__PURE__ */ ((FactorStatus2) => {
  FactorStatus2["UNKNOWN_FACTOR_STATUS"] = "UNKNOWN_FACTOR_STATUS";
  FactorStatus2["ENABLED"] = "ENABLED";
  FactorStatus2["REQUIRE_ACTIVATION"] = "REQUIRE_ACTIVATION";
  FactorStatus2["REQUIRE_REENROLL"] = "REQUIRE_REENROLL";
  FactorStatus2["ENABLED_BY_RULE"] = "ENABLED_BY_RULE";
  FactorStatus2["DISABLED_BY_RULE"] = "DISABLED_BY_RULE";
  return FactorStatus2;
})(FactorStatus || {});
var MfaReason = /* @__PURE__ */ ((MfaReason2) => {
  MfaReason2["UNKNOWN_MFA_REASON"] = "UNKNOWN_MFA_REASON";
  MfaReason2["USER_SETTINGS"] = "USER_SETTINGS";
  MfaReason2["HIGH_RISK_LOGIN"] = "HIGH_RISK_LOGIN";
  return MfaReason2;
})(MfaReason || {});
var UserVerificationRequirement = /* @__PURE__ */ ((UserVerificationRequirement2) => {
  UserVerificationRequirement2["USER_VERIFICATION_UNSPECIFIED"] = "USER_VERIFICATION_UNSPECIFIED";
  UserVerificationRequirement2["USER_VERIFICATION_REQUIRED"] = "USER_VERIFICATION_REQUIRED";
  UserVerificationRequirement2["USER_VERIFICATION_PREFERRED"] = "USER_VERIFICATION_PREFERRED";
  UserVerificationRequirement2["USER_VERIFICATION_DISCOURAGED"] = "USER_VERIFICATION_DISCOURAGED";
  return UserVerificationRequirement2;
})(UserVerificationRequirement || {});

// src/iam-recovery-v1-recovery-recovery.meta.ts
function sendRecoveryEmail2() {
  const payload = {};
  const getRequestOptions = sendRecoveryEmail(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/send-email",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function sendActivationEmail2() {
  const payload = {};
  const getRequestOptions = sendActivationEmail(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/activation-email",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function recover2() {
  const payload = {};
  const getRequestOptions = recover(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/recover",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  AddressTag as AddressTagOriginal,
  EmailTag as EmailTagOriginal,
  FactorStatus as FactorStatusOriginal,
  FactorType as FactorTypeOriginal,
  MfaReason as MfaReasonOriginal,
  PhoneTag as PhoneTagOriginal,
  PrivacyStatus as PrivacyStatusOriginal,
  Reason as ReasonOriginal,
  StateType as StateTypeOriginal,
  StatusName as StatusNameOriginal,
  Status as StatusOriginal,
  TenantType as TenantTypeOriginal,
  UserVerificationRequirement as UserVerificationRequirementOriginal,
  recover2 as recover,
  sendActivationEmail2 as sendActivationEmail,
  sendRecoveryEmail2 as sendRecoveryEmail
};
//# sourceMappingURL=meta.mjs.map